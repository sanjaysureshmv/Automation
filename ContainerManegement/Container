#!/bin/bash

#----------------------------------------------------------------------------------
# Name:salt.sh
# Description: This Script Prepares Standby Server For DataGaurd
# Version: 1.0
# Maintainer: Shailesh Thakur
# usage:
# ---------------------------------------------------------------------------------


#  Running the Scipt as root
#--------------------------------------------------------------------------------

if [[ $EUID -ne 0 ]]; then 

    echo "This Scipt Must Be Run root"

    exit 1
fi


#---------------------------------------------------------------------------------

function usage () {

        ERRORNUM=$1

        echo "Version: 1.0"
        echo "Usage: The Script Manages LXC Container Creation Deletion and other LCA "

       
        #Example
        echo "::"
        echo "Container master "

        [ -z "$ERRORNUM" ] && ERRORNUM=0

    exit $ERRORNUM;
}


#---------------------------------------------------------------------------------

    ProgramName=$(basename $0)

    [ -z "$TimeStamp" ] && \
    TimeStamp=$(date +%H%M%S%d%m%Y)

    export ProgramName
    export TimeStamp


    logfile= ${ProgramName}.${TimeStamp}.log
    echo $logfile

    


#----------------------------Logging Function---------------

function logging () {
	local OPTIND arg
	LOGTIMESTAMP=`date`
        SILENTFLAG=0
        EXITFLAG=0
        while getopts "f:p:l:m:seh" arg; do
        case "$arg" in
                f) logfile="$OPTARG";;
                p) PROCESSNAME="$OPTARG";;
                l) LOGLEV="$OPTARG";;
                m) LOGMSG="$OPTARG";;
                s) SILENTFLAG=1;;
                e) EXITFLAG=1;;
                h) echo Synopsis logging -p PROCESSNAME -f logfile -l LOGLEV -m LOGMSG [-s] [-e]; exit;;
        esac
        done


        [ -z "$logfile" ] && printf "$LOGTIMESTAMP $PROCESSNAME $LOGLEV $LOGMSG\n" >> $logfile
        if [ "$SILENTFLAG" -eq 0 ] && [ -z "$SCREENOFF" ]
        then
                printf "$LOGTIMESTAMP $PROCESSNAME $LOGLEV $LOGMSG\n"
        fi

}


#-------------------------ExitStatus-------------------------------------

function CommandExitStatus() {

	if [ $? = 0 ]
		then
			logging -p $PROGNAME -f $logfile -l INFO -m "$1"
	else
			logging -p $PROGNAME -f $logfile -l ERROR -m "$2"
	exit 1
	fi
}

#---------------------------------------------------------------------------------------

function saltsetup(){

    # Here we are pointing to the latest version oly for a specific version you need to pass full path to 
    # GPG  Public Key

    Ubuntu_Version=$1
    Codename=" "
    role=$2

    

        if [[ "$1" == "12" ]]; then Ubuntu_Version="12.04/"
        Codename="precise"
        fi

        if [[ "$1" == "14" ]]; then  Ubuntu_Version="14.04/" 
        Codename="trusty"
        fi

        if [[ "$1" == "16" ]]; then Ubuntu_Version="16.04/" 
        Codename="xenial"
        fi

 

    Gpgkey="http://repo.saltstack.com/apt/ubuntu/"$Ubuntu_Version"amd64/latest/SALTSTACK-GPG-KEY.pub"

    CommandExitStatus "GPG KEY is Successfully Set" "GPG KEY is Successfully Not Set"

    logging -p $PROGNAME -f $logfile -l INFO -m "Adding The ${Gpgkey} "


    wget -O - ${Gpgkey} | sudo apt-key add -

    CommandExitStatus "GPG KEY Successfully Download and Added" " Failed to Download"

    logging -p $PROGNAME -f $logfile -l INFO -m "Adding Saltstack.list file  "

    echo "deb http://repo.saltstack.com/apt/ubuntu/"$Ubuntu_Version"amd64/latest/ $Codename  main
    " > /etc/apt/sources.list.d/saltstack.list

    CommandExitStatus "Successfully Updated /etc/apt/sources.list.d/saltstack.list file" " Failed to Download"
    
    logging -p $PROGNAME -f $logfile -l INFO -m "Updating System with new repository for salt master"

    apt-get update


    CommandExitStatus "Successfully Updated " " Failed to Update"

    logging -p $PROGNAME -f $logfile -l INFO -m "Installing Salt Master"

    apt-get install salt-${role} -y

    CommandExitStatus "Salt ${role} Successfully Installed " " Failed to install master"



}



#--------------------------------------------------------------------------------------

function main(){

    saltsetup "16" "master"
    
}

main

